heat_template_version: ocata

parameters:
  name:
    type: string
  servers:
    type: json
  server_names:
    type: json
  config:
    type: string
  input_values:
    type: json
    default: {}
  DeploymentActionBlacklist:
    type: json
    default: {}

resources:

  Server:
    type: OS::Heat::Value
    properties:
      value:
        - {get_param: [servers, 0]}
        - {get_param: servers}

  Servers:
    type: OS::Heat::Value
    properties:
      type: json
      value:
        yaql:
          expression: let(server_names => switch(isDict($.data.server_names) => $.data.server_names, true => {}), servers => $.data.servers, blacklist => $.data.blacklist, deployment_name => $.data.deployment_name) -> $servers.deleteAll(set($blacklist.where($deployment_name =~ $.keys().first()).first(default=>{}).values().first(default=>[]).join($server_names.keys(), $server_names[$2] =~ $1, $2)))
          data:
            blacklist: {get_param: DeploymentActionBlacklist}
            servers: {get_param: servers}
            server_names: {get_param: server_names}
            deployment_name: {get_param: name}


  TripleOStructuredDeploymentGroup:
    type: OS::Heat::StructuredDeploymentGroup
    properties:
      name: {get_param: name}
      servers: {get_attr: [Servers, value]}
      config: {get_param: config}
      input_values: {get_param: input_values}

outputs:

  servers:
    description: servers
    value: {get_param: servers}
